/*
 * Basin RPC API
 *
 * Basin RPC API
 *
 * API version: 1.0.11
 * Contact: sestinj@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"time"
)

type CapabilitySchema struct {

	Action string `json:"action,omitempty"`

	Expiration time.Time `json:"expiration,omitempty"`
}

// AssertCapabilitySchemaRequired checks if the required fields are not zero-ed
func AssertCapabilitySchemaRequired(obj CapabilitySchema) error {
	return nil
}

// AssertRecurseCapabilitySchemaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CapabilitySchema (e.g. [][]CapabilitySchema), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCapabilitySchemaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCapabilitySchema, ok := obj.(CapabilitySchema)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCapabilitySchemaRequired(aCapabilitySchema)
	})
}
