/*
 * Basin RPC API
 *
 * Basin RPC API
 *
 * API version: 1.0.11
 * Contact: sestinj@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

type PermissionSchema struct {

	Data []string `json:"data,omitempty"`

	Capabilities []CapabilitySchema `json:"capabilities,omitempty"`

	Entities []string `json:"entities,omitempty"`
}

// AssertPermissionSchemaRequired checks if the required fields are not zero-ed
func AssertPermissionSchemaRequired(obj PermissionSchema) error {
	for _, el := range obj.Capabilities {
		if err := AssertCapabilitySchemaRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecursePermissionSchemaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PermissionSchema (e.g. [][]PermissionSchema), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePermissionSchemaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPermissionSchema, ok := obj.(PermissionSchema)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPermissionSchemaRequired(aPermissionSchema)
	})
}
