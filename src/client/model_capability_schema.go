/*
Basin RPC API

Basin RPC API

API version: 1.0.11
Contact: sestinj@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// CapabilitySchema struct for CapabilitySchema
type CapabilitySchema struct {
	Action *string `json:"action,omitempty"`
	Expiration *time.Time `json:"expiration,omitempty"`
}

// NewCapabilitySchema instantiates a new CapabilitySchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilitySchema() *CapabilitySchema {
	this := CapabilitySchema{}
	return &this
}

// NewCapabilitySchemaWithDefaults instantiates a new CapabilitySchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilitySchemaWithDefaults() *CapabilitySchema {
	this := CapabilitySchema{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *CapabilitySchema) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilitySchema) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *CapabilitySchema) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *CapabilitySchema) SetAction(v string) {
	o.Action = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *CapabilitySchema) GetExpiration() time.Time {
	if o == nil || o.Expiration == nil {
		var ret time.Time
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilitySchema) GetExpirationOk() (*time.Time, bool) {
	if o == nil || o.Expiration == nil {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *CapabilitySchema) HasExpiration() bool {
	if o != nil && o.Expiration != nil {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given time.Time and assigns it to the Expiration field.
func (o *CapabilitySchema) SetExpiration(v time.Time) {
	o.Expiration = &v
}

func (o CapabilitySchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Expiration != nil {
		toSerialize["expiration"] = o.Expiration
	}
	return json.Marshal(toSerialize)
}

type NullableCapabilitySchema struct {
	value *CapabilitySchema
	isSet bool
}

func (v NullableCapabilitySchema) Get() *CapabilitySchema {
	return v.value
}

func (v *NullableCapabilitySchema) Set(val *CapabilitySchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilitySchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilitySchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilitySchema(val *CapabilitySchema) *NullableCapabilitySchema {
	return &NullableCapabilitySchema{value: val, isSet: true}
}

func (v NullableCapabilitySchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilitySchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


